<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 配置调度程序 quartz ，其中配置 JobDetail 有两种方式 -->
    <!-- 方式二：使用 MethodInvokingJobDetailFactoryBean，任务类可以不实现 Job 接口，通过 targetMethod 指定调用方法 -->
    <!-- 定义目标 bean 和 bean 中的方法 -->
<!--    <bean id="ScheduledTaskJob" class="com.usee.utils.ScheduledTask"/>
    <bean id="ScheduledTaskMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="ScheduledTaskJob"/>
        </property>
        <property name="targetMethod">  
 -->
        	<!-- 要执行的方法名称 -->
<!--            <value>execute</value>
        </property>
    </bean>
 -->
    <!-- 调度触发器 -->
<!--    <bean id="CronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="ScheduledTaskMethod"></property>
        <property name="cronExpression" value="0/5 * * * * ?"></property>
    </bean>
-->
    <!-- 调度工厂  -->
<!--    <bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="CronTriggerBean"/>
            </list>
        </property>
    </bean>
-->

    <!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/usee?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="931010" />
	</bean>
	
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- 注解扫描的包
		<property name="annotatedClasses">
			<list>
				<value>com.usee.model.User</value>
				<value>com.usee.model.Danmu</value>
				<value>com.usee.model.Topic</value>
			</list>
		</property>
		 -->
		 <property name="packagesToScan" value="com.usee.model"/>
	</bean>
	
	<!-- 配置SessionFactory -->
<!--	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
 -->
				<!-- 缓存配置 -->
<!--				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">
				   com.googlecode.hibernate.memcached.MemcachedRegionFactory
				</prop>
				<prop key="hibernate.memcached.servers">114.215.141.67:11211</prop>
				<prop key="hibernate.memcached.operationTimeout">60000</prop>
				<prop key="hibernate.cache.region_prefix">quality.cache.ehcache</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.usee.model"/>
	</bean>
 -->	
 
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

</beans>  